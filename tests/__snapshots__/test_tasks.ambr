# serializer version: 1
# name: test_create_task_response
  HabiticaTaskResponse(data=TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.HABIT: 'habit'>, text='task text', notes='task notes', tags=[], value=0.0, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2024, 10, 26, 16, 48, 8, 742000, tzinfo=datetime.timezone.utc), date=None, id=UUID('7bc0d924-f5e5-48a6-af7f-8075f8c94e0f'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=True, down=False, counterUp=0, counterDown=0, frequency=<Frequency.DAILY: 'daily'>, history=[EntryHistory(date=datetime.datetime(2024, 10, 7, 19, 19, 47, 306000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=1, scoredDown=0, isDue=None, completed=None), EntryHistory(date=datetime.datetime(2024, 10, 16, 20, 19, 11, 168000, tzinfo=datetime.timezone.utc), value=8.184193475367, scoredUp=9, scoredDown=0, isDue=None, completed=None)], alias='counter_test', everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), success=True, notifications=[NotificationsUser(Type='ITEM_RECEIVED', data={'icon': 'notif_orca_mount', 'title': 'Orcas for Summer Splash!', 'text': "To celebrate Summer Splash, we've given you an Orca Mount!", 'destination': 'stable'}, seen=True, id=UUID('b7a85df1-06ed-4ab1-b56d-43418fc6a5e5')), NotificationsUser(Type='UNALLOCATED_STATS_POINTS', data={'points': 2}, seen=True, id=UUID('bc3f8a69-231f-4eb1-ba48-a00b6c0e0f37'))], userV=589, appVersion='5.28.6')
# ---
# name: test_delete_task
  HabiticaResponse(data=None, success=True, notifications=[NotificationsUser(Type='ITEM_RECEIVED', data={'icon': 'notif_orca_mount', 'title': 'Orcas for Summer Splash!', 'text': "To celebrate Summer Splash, we've given you an Orca Mount!", 'destination': 'stable'}, seen=True, id=UUID('b7a85df1-06ed-4ab1-b56d-43418fc6a5e5')), NotificationsUser(Type='UNALLOCATED_STATS_POINTS', data={'points': 2}, seen=True, id=UUID('bc3f8a69-231f-4eb1-ba48-a00b6c0e0f37'))], userV=589, appVersion='5.28.6')
# ---
# name: test_get_task
  HabiticaTaskResponse(data=TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.HABIT: 'habit'>, text='task text', notes='task notes', tags=[], value=0.0, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2024, 10, 26, 16, 48, 8, 742000, tzinfo=datetime.timezone.utc), date=None, id=UUID('7bc0d924-f5e5-48a6-af7f-8075f8c94e0f'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=True, down=False, counterUp=0, counterDown=0, frequency=<Frequency.DAILY: 'daily'>, history=[EntryHistory(date=datetime.datetime(2024, 10, 7, 19, 19, 47, 306000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=1, scoredDown=0, isDue=None, completed=None), EntryHistory(date=datetime.datetime(2024, 10, 16, 20, 19, 11, 168000, tzinfo=datetime.timezone.utc), value=8.184193475367, scoredUp=9, scoredDown=0, isDue=None, completed=None)], alias='counter_test', everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), success=True, notifications=[NotificationsUser(Type='ITEM_RECEIVED', data={'icon': 'notif_orca_mount', 'title': 'Orcas for Summer Splash!', 'text': "To celebrate Summer Splash, we've given you an Orca Mount!", 'destination': 'stable'}, seen=True, id=UUID('b7a85df1-06ed-4ab1-b56d-43418fc6a5e5')), NotificationsUser(Type='UNALLOCATED_STATS_POINTS', data={'points': 2}, seen=True, id=UUID('bc3f8a69-231f-4eb1-ba48-a00b6c0e0f37'))], userV=589, appVersion='5.28.6')
# ---
# name: test_get_tasks
  HabiticaTasksResponse(data=[TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.HABIT: 'habit'>, text='task text', notes='task notes', tags=[], value=0.0, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2024, 10, 26, 16, 48, 8, 742000, tzinfo=datetime.timezone.utc), date=None, id=UUID('7bc0d924-f5e5-48a6-af7f-8075f8c94e0f'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=True, down=False, counterUp=0, counterDown=0, frequency=<Frequency.DAILY: 'daily'>, history=[EntryHistory(date=datetime.datetime(2024, 10, 7, 19, 19, 47, 306000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=1, scoredDown=0, isDue=None, completed=None), EntryHistory(date=datetime.datetime(2024, 10, 16, 20, 19, 11, 168000, tzinfo=datetime.timezone.utc), value=8.184193475367, scoredUp=9, scoredDown=0, isDue=None, completed=None)], alias='counter_test', everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.HABIT: 'habit'>, text='task text', notes='task notes', tags=[], value=3.853133245658556, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2024, 12, 14, 1, 34, 39, 602000, tzinfo=datetime.timezone.utc), date=None, id=UUID('5e1bf953-af75-492c-ba02-c18789758d26'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=True, down=True, counterUp=0, counterDown=0, frequency=<Frequency.DAILY: 'daily'>, history=[EntryHistory(date=datetime.datetime(2024, 10, 16, 20, 19, 5, 151000, tzinfo=datetime.timezone.utc), value=3.853133245658556, scoredUp=4, scoredDown=0, isDue=None, completed=None)], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-68.61448963773076, priority=<TaskPriority.TRIVIAL: 0.1>, attribute=<Attributes.STR: 'str'>, byHabitica=True, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 570000, tzinfo=datetime.timezone.utc), date=None, id=UUID('e8be3a26-6d3b-43bc-9aac-8246a8bedaed'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias='task-alias', everyX=None, startDate=None, streak=None, reminders=[Reminders(id=UUID('3e636b09-4a8c-4b2b-a525-29361b510d5b'), time=datetime.datetime(2024, 10, 13, 20, 51, 49, 391000, tzinfo=datetime.timezone.utc), startDate=None)], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=True, checklist=[Checklist(id=UUID('fde91e22-fc27-40e6-a861-d2da47b5e7fd'), text='item 0', completed=True), Checklist(id=UUID('532ba006-1115-4db4-b19d-bb255e3dc3de'), text='item 1', completed=False), Checklist(id=UUID('08da262f-c4f6-4a59-9c33-340e87a7ef27'), text='item 2', completed=False)], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.REWARD: 'reward'>, text='task text', notes='task notes', tags=[UUID('50021cf7-b9f2-4f94-b80d-0263ce7cf3ec')], value=1.0, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2024, 10, 17, 22, 25, 27, 43000, tzinfo=datetime.timezone.utc), date=None, id=UUID('93eb1e9c-4d14-4a94-b699-279963ecf410'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.HABIT: 'habit'>, text='task text', notes='task notes', tags=[], value=0.0, priority=<TaskPriority.HARD: 2>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 10, 7, 19, 8, 12, 325000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 571000, tzinfo=datetime.timezone.utc), date=None, id=UUID('67894647-f6e6-4f1a-824c-62a7fffff752'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=True, down=False, counterUp=0, counterDown=0, frequency=<Frequency.MONTHLY: 'monthly'>, history=[EntryHistory(date=datetime.datetime(2024, 10, 16, 20, 19, 3, 714000, tzinfo=datetime.timezone.utc), value=7.355994112832055, scoredUp=8, scoredDown=0, isDue=None, completed=None)], alias='test_habit', everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-10.065628947026687, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 18, 23, 10, 551000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 560000, tzinfo=datetime.timezone.utc), date=None, id=UUID('75a4ac64-e8ac-44b8-b300-2086af8d2845'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-10.065632848406528, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 20, 22, 27, 696000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('2cae3698-0ca3-441d-ac4e-980323956f42'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-4.16134259811365, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 20, 24, 32, 936000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('a029cb52-1012-4d36-91af-b45c0bdbda69'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-4.16134259811365, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 20, 29, 0, 542000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('203048ee-4020-48ef-99ef-3a20c7c9a8b3'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-10.065631750759767, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 20, 30, 16, 745000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('9983f4c9-04be-446c-99d2-fca07e9e2dcd'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.DAILY: 'daily'>, text='task text', notes='task notes', tags=[], value=2.992271863689143, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 22, 42, 49, 719000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('8b54b538-7fe5-4132-91e1-4eebac0073f5'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=<Frequency.WEEKLY: 'weekly'>, history=[EntryHistory(date=datetime.datetime(2025, 1, 6, 23, 0, 9, 684000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 10, 1, 12, 46, 313000, tzinfo=datetime.timezone.utc), value=1.9747, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 10, 23, 2, 8, 864000, tzinfo=datetime.timezone.utc), value=1.024043774264157, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 13, 17, 48, 43, 163000, tzinfo=datetime.timezone.utc), value=1.998143412564751, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 13, 23, 0, 47, 611000, tzinfo=datetime.timezone.utc), value=2.9482287028135716, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 15, 17, 31, 41, 493000, tzinfo=datetime.timezone.utc), value=2.020995311995297, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 18, 18, 22, 21, 871000, tzinfo=datetime.timezone.utc), value=2.9705244023522885, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 20, 11, 47, 2, 983000, tzinfo=datetime.timezone.utc), value=3.8972281794078136, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 2, 1, 15, 6, 43, 541000, tzinfo=datetime.timezone.utc), value=2.992271863689143, scoredUp=None, scoredDown=None, isDue=True, completed=False)], alias=None, everyX=1, startDate=datetime.datetime(2025, 1, 5, 23, 0, tzinfo=datetime.timezone.utc), streak=0, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[datetime.datetime(2025, 2, 2, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 3, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 4, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 5, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 6, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 7, 23, 0, tzinfo=datetime.timezone.utc)], yesterDaily=True, completed=False, collapseChecklist=False, checklist=[], isDue=True, repeat=Repeat(m=True, t=True, w=True, th=True, f=True, s=True, su=True)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.DAILY: 'daily'>, text='task text', notes='task notes', tags=[], value=4.800754343722116, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 22, 42, 52, 877000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('c65a4932-f81d-4e83-a1f5-b94bc1b5a505'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=<Frequency.WEEKLY: 'weekly'>, history=[EntryHistory(date=datetime.datetime(2025, 1, 6, 23, 0, 9, 696000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 10, 1, 12, 46, 316000, tzinfo=datetime.timezone.utc), value=1.9747, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 10, 23, 2, 8, 865000, tzinfo=datetime.timezone.utc), value=1.024043774264157, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 13, 17, 48, 43, 166000, tzinfo=datetime.timezone.utc), value=1.998143412564751, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 13, 23, 0, 47, 613000, tzinfo=datetime.timezone.utc), value=2.9482287028135716, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 15, 17, 31, 41, 305000, tzinfo=datetime.timezone.utc), value=3.8754620936318465, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 18, 18, 22, 21, 876000, tzinfo=datetime.timezone.utc), value=4.780923305699728, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 20, 11, 47, 2, 987000, tzinfo=datetime.timezone.utc), value=5.665617021312497, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 2, 1, 15, 6, 43, 542000, tzinfo=datetime.timezone.utc), value=4.800754343722116, scoredUp=None, scoredDown=None, isDue=True, completed=False)], alias=None, everyX=1, startDate=datetime.datetime(2025, 1, 5, 23, 0, tzinfo=datetime.timezone.utc), streak=0, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[datetime.datetime(2025, 2, 2, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 3, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 4, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 5, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 6, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 7, 23, 0, tzinfo=datetime.timezone.utc)], yesterDaily=True, completed=False, collapseChecklist=False, checklist=[], isDue=True, repeat=Repeat(m=True, t=True, w=True, th=True, f=True, s=True, su=True)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.DAILY: 'daily'>, text='task text', notes='task notes', tags=[], value=2.992271863689143, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 6, 22, 42, 56, 440000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('1b21023c-b1e6-4b11-bcfa-9d48473033a1'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=<Frequency.WEEKLY: 'weekly'>, history=[EntryHistory(date=datetime.datetime(2025, 1, 6, 23, 0, 9, 693000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 10, 1, 12, 46, 314000, tzinfo=datetime.timezone.utc), value=1.9747, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 10, 23, 2, 8, 866000, tzinfo=datetime.timezone.utc), value=1.024043774264157, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 13, 17, 48, 43, 165000, tzinfo=datetime.timezone.utc), value=1.998143412564751, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 13, 23, 0, 47, 612000, tzinfo=datetime.timezone.utc), value=2.9482287028135716, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 15, 17, 31, 41, 494000, tzinfo=datetime.timezone.utc), value=2.020995311995297, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 18, 18, 22, 21, 873000, tzinfo=datetime.timezone.utc), value=2.9705244023522885, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 20, 11, 47, 2, 985000, tzinfo=datetime.timezone.utc), value=3.8972281794078136, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 2, 1, 15, 6, 43, 543000, tzinfo=datetime.timezone.utc), value=2.992271863689143, scoredUp=None, scoredDown=None, isDue=True, completed=False)], alias=None, everyX=1, startDate=datetime.datetime(2025, 1, 5, 23, 0, tzinfo=datetime.timezone.utc), streak=0, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[datetime.datetime(2025, 2, 2, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 3, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 4, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 5, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 6, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 7, 23, 0, tzinfo=datetime.timezone.utc)], yesterDaily=True, completed=False, collapseChecklist=False, checklist=[], isDue=True, repeat=Repeat(m=True, t=True, w=True, th=True, f=True, s=True, su=True)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.DAILY: 'daily'>, text='task text', notes='task notes', tags=[], value=1.048665488039431, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 13, 18, 36, 13, 598000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('dad786c2-d333-4a24-b81e-4714537b0fec'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=<Frequency.WEEKLY: 'weekly'>, history=[EntryHistory(date=datetime.datetime(2025, 1, 13, 23, 0, 47, 609000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 15, 17, 31, 41, 495000, tzinfo=datetime.timezone.utc), value=0.02529999999999999, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 18, 18, 22, 21, 868000, tzinfo=datetime.timezone.utc), value=1.0246518837628547, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 20, 11, 47, 2, 982000, tzinfo=datetime.timezone.utc), value=1.9987363426517264, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 2, 1, 15, 6, 43, 543000, tzinfo=datetime.timezone.utc), value=1.048665488039431, scoredUp=None, scoredDown=None, isDue=True, completed=False)], alias=None, everyX=1, startDate=datetime.datetime(2025, 1, 12, 23, 0, tzinfo=datetime.timezone.utc), streak=0, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[datetime.datetime(2025, 2, 2, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 3, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 4, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 5, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 6, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 7, 23, 0, tzinfo=datetime.timezone.utc)], yesterDaily=True, completed=False, collapseChecklist=False, checklist=[], isDue=True, repeat=Repeat(m=True, t=True, w=True, th=True, f=True, s=True, su=True)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.DAILY: 'daily'>, text='task text', notes='task notes', tags=[], value=1.048665488039431, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 13, 18, 36, 15, 291000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('a41c65d3-f97b-4fac-8bd8-1e9c43be99d1'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=<Frequency.WEEKLY: 'weekly'>, history=[EntryHistory(date=datetime.datetime(2025, 1, 13, 23, 0, 47, 608000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 15, 17, 31, 41, 496000, tzinfo=datetime.timezone.utc), value=0.02529999999999999, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 18, 18, 22, 21, 864000, tzinfo=datetime.timezone.utc), value=1.0246518837628547, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 20, 11, 47, 2, 980000, tzinfo=datetime.timezone.utc), value=1.9987363426517264, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 2, 1, 15, 6, 43, 546000, tzinfo=datetime.timezone.utc), value=1.048665488039431, scoredUp=None, scoredDown=None, isDue=True, completed=False)], alias=None, everyX=1, startDate=datetime.datetime(2025, 1, 12, 23, 0, tzinfo=datetime.timezone.utc), streak=0, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[datetime.datetime(2025, 2, 2, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 3, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 4, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 5, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 6, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 2, 7, 23, 0, tzinfo=datetime.timezone.utc)], yesterDaily=True, completed=False, collapseChecklist=False, checklist=[], isDue=True, repeat=Repeat(m=True, t=True, w=True, th=True, f=True, s=True, su=True)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.DAILY: 'daily'>, text='task text', notes='task notes', tags=[], value=1.9987363426517264, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 13, 18, 36, 17, 152000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('d9247fff-37ec-4c7e-9b15-de79b99a830f'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=<Frequency.WEEKLY: 'weekly'>, history=[EntryHistory(date=datetime.datetime(2025, 1, 13, 23, 0, 47, 605000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 15, 17, 31, 41, 496000, tzinfo=datetime.timezone.utc), value=0.02529999999999999, scoredUp=None, scoredDown=None, isDue=True, completed=False), EntryHistory(date=datetime.datetime(2025, 1, 18, 18, 22, 21, 862000, tzinfo=datetime.timezone.utc), value=1.0246518837628547, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 1, 20, 11, 47, 2, 978000, tzinfo=datetime.timezone.utc), value=1.9987363426517264, scoredUp=None, scoredDown=None, isDue=True, completed=True), EntryHistory(date=datetime.datetime(2025, 2, 1, 15, 6, 43, 547000, tzinfo=datetime.timezone.utc), value=1.9987363426517264, scoredUp=None, scoredDown=None, isDue=False, completed=False)], alias=None, everyX=0, startDate=datetime.datetime(2025, 1, 12, 23, 0, tzinfo=datetime.timezone.utc), streak=2, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[datetime.datetime(2025, 1, 20, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 1, 21, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 1, 22, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 1, 23, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 1, 24, 23, 0, tzinfo=datetime.timezone.utc), datetime.datetime(2025, 1, 26, 23, 0, tzinfo=datetime.timezone.utc)], yesterDaily=True, completed=False, collapseChecklist=False, checklist=[], isDue=False, repeat=Repeat(m=True, t=True, w=True, th=True, f=True, s=True, su=True)), TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.TODO: 'todo'>, text='task text', notes='task notes', tags=[], value=-2.025956256651074, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2025, 1, 18, 18, 45, 4, 942000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2025, 2, 1, 15, 6, 43, 561000, tzinfo=datetime.timezone.utc), date=None, id=UUID('cfd7c79b-ac4d-4133-923f-36f169308b0d'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=None, down=None, counterUp=None, counterDown=None, frequency=None, history=[], alias=None, everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=False, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False))], success=True, notifications=[NotificationsUser(Type='ITEM_RECEIVED', data={'icon': 'notif_orca_mount', 'title': 'Orcas for Summer Splash!', 'text': "To celebrate Summer Splash, we've given you an Orca Mount!", 'destination': 'stable'}, seen=True, id=UUID('b7a85df1-06ed-4ab1-b56d-43418fc6a5e5')), NotificationsUser(Type='UNALLOCATED_STATS_POINTS', data={'points': 2}, seen=True, id=UUID('bc3f8a69-231f-4eb1-ba48-a00b6c0e0f37'))], userV=589, appVersion='5.28.6')
# ---
# name: test_reorder_task
  HabiticaTaskOrderResponse(data=[UUID('ac13c62c-9375-4809-a357-0e42b01a1b43'), UUID('2388ccad-0387-4ea6-9968-2d10d994e903'), UUID('5c6efb91-6ae3-4cad-8b19-2dd2fc52a965'), UUID('80afe0b9-e367-4473-8117-b8bc7115f54a'), UUID('4cc21c36-886c-4a43-b580-877e958a37fd'), UUID('10a45996-7133-4ca1-84d8-abf1093d9dcc'), UUID('fb867459-ae50-4cee-9017-c13206c6dfa2')], success=True, notifications=[NotificationsUser(Type='ITEM_RECEIVED', data={'icon': 'notif_orca_mount', 'title': 'Orcas for Summer Splash!', 'text': "To celebrate Summer Splash, we've given you an Orca Mount!", 'destination': 'stable'}, seen=True, id=UUID('b7a85df1-06ed-4ab1-b56d-43418fc6a5e5')), NotificationsUser(Type='UNALLOCATED_STATS_POINTS', data={'points': 2}, seen=True, id=UUID('bc3f8a69-231f-4eb1-ba48-a00b6c0e0f37'))], userV=589, appVersion='5.28.6')
# ---
# name: test_update_task
  HabiticaTaskResponse(data=TaskData(challenge=Challenge(id=None, taskId=None, shortName=None, broken=None, winner=None), group=GroupTask(assignedUsers=[], id=None, assignedDate=None, assigningUsername=None, assignedUsersDetail={}, taskId=None, managerNotes=None, completedBy=CompletedBy(userId=None, date=None)), Type=<TaskType.HABIT: 'habit'>, text='task text', notes='task notes', tags=[], value=0.0, priority=<TaskPriority.EASY: 1>, attribute=<Attributes.STR: 'str'>, byHabitica=False, createdAt=datetime.datetime(2024, 9, 22, 16, 41, 39, 555000, tzinfo=datetime.timezone.utc), updatedAt=datetime.datetime(2024, 10, 26, 16, 48, 8, 742000, tzinfo=datetime.timezone.utc), date=None, id=UUID('7bc0d924-f5e5-48a6-af7f-8075f8c94e0f'), userId=UUID('2a61fddc-654f-4ded-b906-bb8a6da680d5'), up=True, down=False, counterUp=0, counterDown=0, frequency=<Frequency.DAILY: 'daily'>, history=[EntryHistory(date=datetime.datetime(2024, 10, 7, 19, 19, 47, 306000, tzinfo=datetime.timezone.utc), value=1.0, scoredUp=1, scoredDown=0, isDue=None, completed=None), EntryHistory(date=datetime.datetime(2024, 10, 16, 20, 19, 11, 168000, tzinfo=datetime.timezone.utc), value=8.184193475367, scoredUp=9, scoredDown=0, isDue=None, completed=None)], alias='counter_test', everyX=None, startDate=None, streak=None, reminders=[], daysOfMonth=[], weeksOfMonth=[], nextDue=[], yesterDaily=None, completed=None, collapseChecklist=False, checklist=[], isDue=None, repeat=Repeat(m=True, t=True, w=True, th=False, f=False, s=False, su=False)), success=True, notifications=[NotificationsUser(Type='ITEM_RECEIVED', data={'icon': 'notif_orca_mount', 'title': 'Orcas for Summer Splash!', 'text': "To celebrate Summer Splash, we've given you an Orca Mount!", 'destination': 'stable'}, seen=True, id=UUID('b7a85df1-06ed-4ab1-b56d-43418fc6a5e5')), NotificationsUser(Type='UNALLOCATED_STATS_POINTS', data={'points': 2}, seen=True, id=UUID('bc3f8a69-231f-4eb1-ba48-a00b6c0e0f37'))], userV=589, appVersion='5.28.6')
# ---
